version: '3.8'

services:
  app:
    build: .
    container_name: game_app
    restart: always
    env_file: .env.development.dist
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_SCHEMA: ${POSTGRES_SCHEMA}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      JWT_SECRET: ${JWT_SECRET}
    expose:
      - "8000"
    depends_on:
      - postgres
      - redis
    networks:
      - game_network

  postgres:
    image: postgres:14
    container_name: game_postgres
    restart: always
    env_file: .env.development.dist
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-game_admin}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - game_network

  redis:
    image: redis:6-alpine
    container_name: game_redis
    restart: always
    env_file: .env.development.dist
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data
    networks:
      - game_network

  caddy:
    image: caddy:2
    container_name: game_caddy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - game_network

volumes:
  pgdata:
  redisdata:
  caddy_data:
  caddy_config:

networks:
  game_network: